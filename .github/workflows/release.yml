on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Create Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
          - 'macos-latest'
          - 'windows-latest'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get OS info
        run: |
          BINARY_NAME=random-standup-$(echo ${{matrix.os}} | sed 's/-latest//')
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME"
      - name: Release Notes
        if: startsWith(${{matrix.os}}, 'ubuntu')
        run:
          git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      - name: Release with Notes
        if: startsWith(${{matrix.os}}, 'ubuntu')
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: jidicula/random-standup
      - name: Release Assets without Notes
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: jidicula/random-standup
